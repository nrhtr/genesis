<HEAD><TITLE>discuss@charon: [943] in "Coldmud discussion meeting"</TITLE>
<H1>[943] in Coldmud discussion meeting</H1></HEAD>
<A HREF="/"><IMG SRC="/i-d.gif" ALT="root"></A>
<A HREF="?943"><IMG SRC="/i-back.gif" ALT="meeting"></A>
<A HREF="/help.html"><IMG SRC="/i-help.gif" ALT="help"></A>
<A HREF="1"><IMG SRC="/i-first.gif" ALT="first"></A>
<A HREF="939"><IMG SRC="/i-fref.gif" ALT="first in chain"></A>
<A HREF="942"><IMG SRC="/i-pref.gif" ALT="previous in chain"></A>
<A HREF="942"><IMG SRC="/i-prev.gif" ALT="previous"></A>
<A HREF="944"><IMG SRC="/i-next.gif" ALT="next"></A>
<IMG SRC="/n-nref.gif" ALT="">
<IMG SRC="/n-lref.gif" ALT="">
<A HREF="1641"><IMG SRC="/i-last.gif" ALT="last"></A>
<HR><H2>Re: [COLD] regular expressions</H2>
<H3>daemon@ATHENA.MIT.EDU (Sat Mar 23 17:18:33 1996
)</H3>
<PRE>
Date: Sat, 23 Mar 1996 14:58:19 -0700 (MST)
From: Brandon Gillespie &lt;brandon@tombstone.sunrem.com&gt;
To: Jeff Kesselman &lt;jeffk@tenetwork.com&gt;
cc: coldstuff@cold.org, Miroslav Silovic &lt;silovic@srce.hr&gt;
In-Reply-To: &lt;199603230019.QAA06011@yam.tenetwork.com&gt;

&gt; &gt;I think we should use Perl regexp (if you feel like isolating its
&gt; &gt;source). At least I can tell which characters need to be backslashed and
&gt; &gt;when in Perl regexp. :) It's also somewhat standard and powerful
&gt; &gt;enough.
&gt; 
&gt; As I understand it, the issue is not changing what regexp in coldc 
&gt; does, but how itis implemented, yes?

Basically, yeah.  Actually, I was wandering through the FreeBSD kernel 
and stumbled across the regexp code and was wondering if we should just 
link into the POSIX regexp code (if it exists), or if we should ignore it 
(as we do now).

&gt; I personally like coldc 's regexp for the way it allows me to specify 
&gt; what I want extracted.  Its very mud-friendly.  How it is implemented 
&gt; I don't care so much about BUT the same expression should produce the 
&gt; same reult on all ColdX implementations.  How it does it IMO shoudl 
&gt; be left up to the porter/implementor.

Yup, this is the concern I brought up, the current POSIX regexp definition
is vague in areas, leaving much open for interpretation.  In general this 
isn't a problem, but there are areas where certain things could vary from 
OS to OS.

-Brandon
</PRE>
