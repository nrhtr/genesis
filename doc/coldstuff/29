<HEAD><TITLE>discuss@charon: [29] in "Coldmud discussion meeting"</TITLE>
<H1>[29] in Coldmud discussion meeting</H1></HEAD>
<A HREF="/"><IMG SRC="/i-d.gif" ALT="root"></A>
<A HREF="?29"><IMG SRC="/i-back.gif" ALT="meeting"></A>
<A HREF="/help.html"><IMG SRC="/i-help.gif" ALT="help"></A>
<A HREF="1"><IMG SRC="/i-first.gif" ALT="first"></A>
<A HREF="21"><IMG SRC="/i-fref.gif" ALT="first in chain"></A>
<A HREF="23"><IMG SRC="/i-pref.gif" ALT="previous in chain"></A>
<A HREF="28"><IMG SRC="/i-prev.gif" ALT="previous"></A>
<A HREF="30"><IMG SRC="/i-next.gif" ALT="next"></A>
<IMG SRC="/n-nref.gif" ALT="">
<IMG SRC="/n-lref.gif" ALT="">
<A HREF="1641"><IMG SRC="/i-last.gif" ALT="last"></A>
<HR><H2>Re: more ponderings</H2>
<H3>daemon@ATHENA.MIT.EDU (Tue Nov 16 16:45:24 1993
)</H3>
<PRE>
To: Lynx &lt;BRANDON@cc.usu.edu&gt;
Cc: coldstuff@MIT.EDU
In-Reply-To: Your message of Mon, 15 Nov 93 22:49:39 -0600.
             &lt;01H5D0FB8I5AANHKWW@cc.usu.edu&gt; 
Date: Tue, 16 Nov 93 16:28:25 EST
From: Greg Hudson &lt;ghudson@MIT.EDU&gt;


&gt; Now this next suggestion is getting almost into a security hole, but
&gt; hey.  What about creating a write_file() for gods, which has a
&gt; builtin max of bytes that they can write, modifyable only by the
&gt; arch (programmer1)...  this would be very hard to keep track of, but
&gt; it would make it much easier for the other gods to deal with disk
&gt; based files, rather than having to create objects to hold all the
&gt; text.  Also with help, I would love to have a disk based help setup,
&gt; where $has_help simply echo's the files or whatever (so you dont
&gt; have to load mongo objects into mem every time somebody asks for
&gt; help on something).

First, Coldmud does not know anything about "gods" or "programmer1".
The only concept of security it has is functions limited to $sys,
which allows the db to implement all necessary security.

However, when making design decisions from the server, I assume that
all in-db security and accounting is defeatable, and therefore do not
allow scribbling on the file system.

Second, off-line files are not a good solution in general.
echo_file() is there because Coolmud has it; I think it's reasonable
when restricted to, say, the welcome file, but it's just not terribly
useful apart from that.  There's no reason to use off-line files
instead of the database for storing information.

If you're worried about the large help object problem, simply
distribute the database over multiple objects somehow.  This is much
cleaner than introducing access to the file system.

--GBH

</PRE>
